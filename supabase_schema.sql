-- Create the notes table
CREATE TABLE notes (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at TIMESTAMPTZ NOT NULL DEFAULT NOW(),
  note TEXT,
  latitude DOUBLE PRECISION NOT NULL,
  longitude DOUBLE PRECISION NOT NULL,
  user_id UUID REFERENCES auth.users(id) NOT NULL
);

-- Enable Row Level Security
ALTER TABLE notes ENABLE ROW LEVEL SECURITY;

-- Policies for the notes table

-- 1. Users can insert their own notes
CREATE POLICY "Users can insert their own notes"
ON notes
FOR INSERT
TO authenticated
WITH CHECK (auth.uid() = user_id);

-- 2. Authenticated users can view all notes
CREATE POLICY "Authenticated users can view all notes"
ON notes
FOR SELECT
TO authenticated
USING (true);

-- 3. Users can update their own notes
CREATE POLICY "Users can update their own notes"
ON notes
FOR UPDATE
TO authenticated
USING (auth.uid() = user_id);

-- 4. Users can delete their own notes
CREATE POLICY "Users can delete their own notes"
ON notes
FOR DELETE
TO authenticated
USING (auth.uid() = user_id);
